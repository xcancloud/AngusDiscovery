<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>cloud.xcan.angus</groupId>
    <artifactId>AngusInfra</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>xcan-angusdiscovery.boot</artifactId>
  <name>AngusDiscovery</name>
  <version>1.0.0</version>
  <packaging>jar</packaging>
  <description>Service Discovery based on Eureka. Service registration, discovery, management, and
    ensure that services provide balance and failover.
  </description>

  <organization>
    <name>XCan Cloud</name>
    <url>http://www.xcan.cloud</url>
  </organization>

  <licenses>
    <license>
      <name>GPLv3</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
    </license>
  </licenses>

  <scm>
    <url>scm:git:https://github.com/xcancloud/AngusDiscovery</url>
    <connection>scm:git:git@gitlab.xcan.work/xcan-framework/AngusDiscovery.git</connection>
    <developerConnection>scm:git:https://github.com/xcancloud/AngusDiscovery.git
    </developerConnection>
    <tag>${project.version}</tag>
  </scm>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/xcancloud/AngusDiscovery/-/issues</url>
  </issueManagement>

  <properties>
    <xcan-infra.version>1.0.0</xcan-infra.version>

    <archive.name>discovery</archive.name>
    <hump.name>AngusDiscovery</hump.name>
    <docker.image.name>angusdiscovery</docker.image.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>cloud.xcan.angus</groupId>
      <artifactId>xcan-infra.core</artifactId>
      <version>${xcan-infra.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-redis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.lettuce</groupId>
          <artifactId>lettuce-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${hump.name}-${editionName}-${project.version}</finalName>
    <filters>
      <filter>src/main/resources/application.yml</filter>
      <filter>src/main/resources/application-${profile.active}.yml</filter>
    </filters>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Build the Docker image and push it to the registry. -->
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <configuration>
              <repository>${docker.image.name}</repository>
              <tag>${project.version}</tag>
              <dockerfile>${project.build.directory}/Dockerfile</dockerfile>
              <buildArgs>
                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
              </buildArgs>
            </configuration>
            <executions>
              <execution>
                <id>docker-build</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-push</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
